# https://github.com/maxyermayank/docker-compose-elasticsearch-kibana.git
version: '3.7'
services:
  delete-indexes:
    image: playdingnow/delete-outdated-es-indexes:1.4
    environment:
      - eshost=elasticsearch
      - esport=9200
      - esmaxdays=15
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
    container_name: elasticsearch1
    cap_add:
      - ALL
    environment:
      - node.name=elasticsearch1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024M -Xmx1024M"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1        
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata1
        target: /usr/share/elasticsearch/data
    networks:
      - elastic
      - ingress
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9200']
      interval: 10s
      timeout: 5s
      retries: 3    
  kibana:
    image: docker.elastic.co/kibana/kibana:7.0.0
    container_name: kibana
    cap_add:
      - ALL
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch1:9200/
    ports:
      - 5601:5601
    volumes:
      - type: volume
        source: logs
        target: /var/log
    networks:
      - elastic
      - ingress
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5601']
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - elasticsearch
  apmserver:
    image: docker.elastic.co/apm/apm-server:7.0.0
    command: --strict.perms=false
    ports:
      - 8200:8200
      - 8201:8200
    environment:
      - apm-server.host=0.0.0.0
      - setup.kibana.host=kibana:5601
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    # volumes:
    #   - ${PWD}/configs/apm-server.yml:/usr/share/apm-server/apm-server.yml
    networks:
        - elastic
    depends_on:
        - elasticsearch
  nginx:
    image: nginx:latest
    ports:
        - 80:80
    volumes:
        - ${PWD}/nginx-config/:/etc/nginx/conf.d/
    command: /bin/bash -c "nginx -g 'daemon off;'"
    ulimits:
      nproc: 65535
    networks:
      - ingress
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost']
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - elasticsearch
      - kibana
volumes:
  esdata1:
  logs:

networks:
  elastic:
  ingress:

