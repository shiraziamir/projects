version: '2'

services:
  haproxy:
    image: nmarus/haproxy-certbot
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/haproxy:/config
      - /etc/haproxy/letsencrypt:/etc/letsencrypt
      - /etc/haproxy/certs.d:/usr/local/etc/haproxy/certs.d
    cap_add:
      - NET_ADMIN
    links:
      - app
      - mongox
      - nginx

  redis:
    image: bitnami/redis
    restart: always
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  mongodb-primary:
    image: 'bitnami/mongodb:4.0'
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=rs0
      - MONGODB_ENABLE_DIRECTORY_PER_DB=yes
      - MONGODB_PORT_NUMBER=27017
      - MONGODB_USERNAME=xp
      - MONGODB_PASSWORD=3CKtvqK
      - MONGODB_DATABASE=staging
    volumes:
      - 'mongodb_master_data:/bitnami'

  mongodb-secondary:
    image: 'bitnami/mongodb:4.0'
    restart: always
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_REPLICA_SET_NAME=rs0
      - MONGODB_PRIMARY_HOST=mongodb-primary
      - MONGODB_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_ENABLE_DIRECTORY_PER_DB=yes
      - MONGODB_PRIMARY_PORT_NUMBER=27017
      - MONGODB_PORT_NUMBER=27017

  mongodb-arbiter:
    image: 'bitnami/mongodb:4.0'
    restart: always
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_REPLICA_SET_NAME=rs0
      - MONGODB_PRIMARY_HOST=mongodb-primary
      - MONGODB_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_ENABLE_DIRECTORY_PER_DB=yes
      - MONGODB_PRIMARY_PORT_NUMBER=27017
      - MONGODB_PORT_NUMBER=27017
  app:
    build: 
      context: .
      dockerfile: Dockerfile-local
    restart: always
    ports:
      - 3001:3001
      - 4000:4000
    volumes:
      - /opt/git:/opt/git
      - /usr/bin/mongo:/usr/bin/mongo
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - redis
        
#  app2:
#    build: 
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - 3002:3001
#      - 4002:4000
#    volumes:
#      - /usr/bin/mongo:/usr/bin/mongo
#    depends_on:
#      - mongodb-primary
#      - mongodb-secondary
#      - mongodb-arbiter
#      - redis
  nginx:
    image: nginx:latest
    restart: always
    ports:
        - '81:80'
    volumes:
        - /etc/nginx:/etc/nginx/
        - /var/log/nginx:/var/log/nginx
        - /var/www:/var/www/
        - /opt/git/production/live/x-project-backend.git/docs:/var/www/xproject/docs
  mongox:
    image: mongo-express
    restart: always
    environment:
        - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
        - ME_CONFIG_SITE_BASEURL=/mongox
        - ME_CONFIG_MONGODB_SERVER=mongodb-primary
        - ME_CONFIG_MONGODB_PORT=27017
        - ME_CONFIG_MONGODB_ENABLE_ADMIN=false
        - ME_CONFIG_MONGODB_AUTH_DATABASE=staging
        - ME_CONFIG_MONGODB_AUTH_USERNAME=xp
        - ME_CONFIG_MONGODB_AUTH_PASSWORD=3CKtvqK
        - ME_CONFIG_BASICAUTH_USERNAME=tavana
        - ME_CONFIG_BASICAUTH_PASSWORD=jaflkaj!!
    ports:
        - "8081:8081"
    links:
        - mongodb-primary

  templates:
    image: portainer/templates
    container_name: "portainer-templates"
    #networks:
    #  - local

  portainer:
    image: portainer/portainer
    restart: always
    container_name: "portainer-app"
    command: --templates http://templates/templates.json --host=unix:///var/run/docker.sock
    #networks:
    #  - local
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data

        #watchtower:
        #image: v2tec/watchtower
        #container_name: "portainer-watchtower"
        #command: --cleanup portainer-app portainer-watchtower portainer/templates
        #networks:
        #- local
        #volumes:
        #- /var/run/docker.sock:/var/run/docker.sock

volumes:
  mongodb_master_data:
    driver: local
